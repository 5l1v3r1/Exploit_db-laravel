<?php

namespace App\Policies;

use App\User;
use App\Exploit;
use Illuminate\Auth\Access\HandlesAuthorization;

class ExploitPolicy
{
    use HandlesAuthorization;
    
    public function before($user, $ability)
	{
		if($user->hasPermission('manage-exploit')) 
		{
	      return true;
	    }
	}
    /**
     * Determine whether the user can view the exploit.
     *
     * @param  \App\User  $user
     * @param  \App\Exploit  $exploit
     * @return mixed
     */
    public function view(User $user, Exploit $exploit)
    {
        //
    }

    /**
     * Determine whether the user can create exploits.
     *
     * @param  \App\User  $user
     * @return mixed
     */
    public function create(User $user)
    {
        return $user->id > 0 ;
    }

    /**
     * Determine whether the user can update the exploit.
     *
     * @param  \App\User  $user
     * @param  \App\Exploit  $exploit
     * @return mixed
     */
    public function update(User $user, Exploit $exploit)
    {
        return $user->id == $exploit->user_id;
    }

    /**
     * Determine whether the user can delete the exploit.
     *
     * @param  \App\User  $user
     * @param  \App\Exploit  $exploit
     * @return mixed
     */
    public function delete(User $user, Exploit $exploit)
    {
        return $user->id == $exploit->user_id;
    }

    /**
     * Determine whether the user can restore the exploit.
     *
     * @param  \App\User  $user
     * @param  \App\Exploit  $exploit
     * @return mixed
     */
    public function restore(User $user, Exploit $exploit)
    {
        //
    }

    /**
     * Determine whether the user can permanently delete the exploit.
     *
     * @param  \App\User  $user
     * @param  \App\Exploit  $exploit
     * @return mixed
     */
    public function forceDelete(User $user, Exploit $exploit)
    {
        //
    }
}
