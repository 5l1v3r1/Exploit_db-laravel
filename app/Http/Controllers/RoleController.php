<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;
use App\Role;
use App\Permission;
use App\User;
use Session;
class RoleController extends Controller
{
    public function __construct() {
        $this->middleware('permission:manage-roles' , ['except' => ['index']]);
    }
    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function index()
    {
        $roles = Role::all();
        return view('admin.roles.index')->withRoles($roles);
    }
     /**
     * Show the form for editing the specified resource.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function edit($id)
    {
        $role = Role::findorfail($id);
        $permissions = Permission::all();
        return view('admin.roles.edit')->withRole($role)->withPermissions($permissions);
    }

    /**
     * Update the specified resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function update(Request $request, $id)
    {
        $this->validate($request, [
        'display_name' => 'required|max:255',
        'description' => 'sometimes|max:255'
        ]);
        $role = Role::findOrFail($id);
        $role->display_name = $request->display_name;
        $role->description = $request->description;
        $role->save();
        if ($request->permissions) {
            $role->syncPermissions(explode(',', $request->permissions));
        }
        Session::flash('success', 'Successfully update the '. $role->display_name . ' role in the database.');
        return redirect()->route('roles.index', $id);
    }
    public function setRoleToUser(Request $request , $user , $mode) // mode : enabled OR disabled
    {
        $author = User::findOrFail($user);
        if ($mode == 'enabled') {
            $author->attachRole($request->role); 
        } else if ($mode == 'disabled') {
            $author->detachRole($request->role); 
        }
        return redirect()->route('getroleUsers' , ['id'=>$request->role]);
    }
    public function usersByRole($role)
    {
        $role = Role::find($role);
        //dd($role);
        return view('admin.roles.roleUsers' , ['role' => $role]);
    }
}
