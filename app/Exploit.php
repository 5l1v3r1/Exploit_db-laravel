<?php

namespace App;

use Illuminate\Database\Eloquent\Model;
use Illuminate\Support\Facades\DB;
class Exploit extends Model
{
	protected $table = 'exploit';

    /**
     * The attributes that are mass assignable.
     *
     * @var array
     */
    protected $fillable = [
        'title' , 'user_id' , 'category_id' , 'platform_id'
    ];
    public function category()
    {
    	return $this->belongTo('App\Category');
    }
    public function platform()
    {
        $this->belongTo('App\Platform');
    }
    public function user()
    {
        $this->belongTo('App\User');
    }
    public static function getChild($id) 
    {
        return Category::where('category_id' , $id )->pluck('id')->toArray();
    }
    public static function getRootExploits()
    {
        $root = 0;
        $cat = Category::getChildOfRoot();
        for ($i=0; $i < count($cat); $i++) { 
            $CategoryExploit[$cat[$i]->id.'|'.$cat[$i]->name] = self::getExploitsByCategory($cat[$i]->id); 
        }
        return $CategoryExploit;
    }
    public static function getExploitsByCategory($id)
    {   
        $exploits = DB::table('exploit')->select(array(DB::raw('category.category_id as parent') , DB::raw('platform.name as platformName') ,
        DB::raw('users.name as author')  , 'exploit.*' ))
            ->join('category' , 'category.id' , '=' , 'exploit.category_id'  )
            ->join('users'  , 'users.id' , '=' , 'exploit.user_id' )
            ->join('platform' , 'platform.id' , '=' , 'exploit.platform_id')
            ->where('exploit.category_id' , '=' , $id)
            ->orWhereIn('exploit.category_id' , self::getChild($id) )->paginate(20);
        return  $exploits; 
    }
    public static function getAllExploits()
    {
        $exploits = DB::table('exploit')->select(array(DB::raw('category.category_id as parent') , DB::raw('platform.name as platformName') , DB::raw('category.name as categoryName') ,
        DB::raw('users.name as author')  , 'exploit.*' ))
            ->join('category' , 'category.id' , '=' , 'exploit.category_id'  )
            ->join('users'  , 'users.id' , '=' , 'exploit.user_id' )
            ->join('platform' , 'platform.id' , '=' , 'exploit.platform_id')
            ->orderBy('exploit.id')->paginate(20);
        return  $exploits; 
    }
    public static function detail($id)
    {
        $exploits = DB::table('exploit')->select(array(DB::raw('category.category_id as parent') , DB::raw('platform.name as platformName') , DB::raw('category.name as categoryName') ,
        DB::raw('users.name as author')  , 'exploit.*' ))
            ->join('category' , 'category.id' , '=' , 'exploit.category_id'  )
            ->join('users'  , 'users.id' , '=' , 'exploit.user_id' )
            ->join('platform' , 'platform.id' , '=' , 'exploit.platform_id')
            ->where('exploit.id' , '=' , $id )
            ->first();
        return  $exploits;
    }  
    public static function search($keyword, $category, $platform)
    {
        $exploits = DB::table('exploit')->select(array(DB::raw('category.category_id as parent') , DB::raw('platform.name as platformName') , DB::raw('category.name as categoryName') ,
        DB::raw('users.name as author')  , 'exploit.*' ))
            ->join('category' , 'category.id' , '=' , 'exploit.category_id'  )
            ->join('users'  , 'users.id' , '=' , 'exploit.user_id' )
            ->join('platform' , 'platform.id' , '=' , 'exploit.platform_id')
            ->where('exploit.title' , 'LIKE' , "%$keyword%" )
            ->orWhere('category.name' , '=' , $category)
            ->orWhere('platform.name' , '=' , $platform)
            ->orderBy('exploit.id')->paginate(20);
        return  $exploits;
    }
    public static function getByPlatform($platform)
    {
        $exploits = DB::table('exploit')->select(array(DB::raw('category.category_id as parent') , DB::raw('platform.name as platformName') , DB::raw('category.name as categoryName') ,
        DB::raw('users.name as author') , 'exploit.*'))
            ->join('category' , 'category.id' , '=' , 'exploit.category_id')
            ->join('users'  , 'users.id' , '=' , 'exploit.user_id' )
            ->join('platform' , 'platform.id' , '=' , 'exploit.platform_id')
            ->where('platform.name' , 'LIKE' , "%$platform%")
            ->orderBy('exploit.id')->paginate(20);
        return  $exploits;
    }
    public static function getByAuthor($author)
    {
        $exploits = DB::table('exploit')->select(array(DB::raw('category.category_id as parent') , DB::raw('platform.name as platformName') , DB::raw('category.name as categoryName') ,
        DB::raw('users.name as author') , 'exploit.*'))
            ->join('category' , 'category.id' , '=' , 'exploit.category_id')
            ->join('users'  , 'users.id' , '=' , 'exploit.user_id' )
            ->join('platform' , 'platform.id' , '=' , 'exploit.platform_id')
            ->where('exploit.user_id' , '=' , $author)
            ->orderBy('exploit.id')->paginate(20);
        return  $exploits;
    }
}
